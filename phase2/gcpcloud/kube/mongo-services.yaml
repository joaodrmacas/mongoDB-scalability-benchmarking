apiVersion: v1
kind: Service
metadata:
  name: mongo-cfg
  labels:
    app: mongo-cfg
spec:
  selector:
    app: mongo-cfg
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-shard1
spec:
  selector:
    app: mongo-shard1
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-shard2
spec:
  selector:
    app: mongo-shard2
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-shard3
spec:
  selector:
    app: mongo-shard3
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-shard4
spec:
  selector:
    app: mongo-shard4
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-shard5
spec:
  selector:
    app: mongo-shard5
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-mongos
spec:
  selector:
    app: mongo-mongos
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-test-client-service
spec:
  type: ClusterIP  # Use ClusterIP for internal communication, change to NodePort or LoadBalancer if needed
  selector:
    app: mongo-test-client
  ports:
    - protocol: TCP
      port: 8080          # Port exposed by the service
      targetPort: 8080  # Port on which the container is listening
